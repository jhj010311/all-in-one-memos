제시된 알림서비스용 수단 3가지 - polling, SSE, WebSocket


polling
: 일정 시간마다 이벤트가 있는지 요청을 보내 스캔하는 방식

>> 구현은 간단하다고 해도 계속해서 네트워크 리소스를 잡아먹게 되는 방식
>>> 폐기
>>>> 단 다른 방식이 안 된다면 1순위 대체방안으로 고려


WebSocket
: 완전한 실시간 양방향 통신을 기반으로 알림을 주고받을 수 있는 방식

>> 구현도 어렵고 지속적인 연결상태 유지를 위해 들어가는 리소스나 해결해야할 장애가 많음
>>> 폐기



SSE(Serever-Sent Events)
: 서버->클라이언트 단방향 실시간 데이터스트림 전송 프로토콜

>> 구현이 비교적 간단, 연결을 계속 유지해야할 필요가 낮으니 리소스도 덜 먹는 편
>>> 채용





현재 구상 목표

- 팔로우한 대상(사람인지 상품인지는 미정)이 발행한 이벤트를 수신하기
- 받은 알림들을 목록화해서 보여주는 대시보드
- 브라우저를 켜둔 상태라면 모달로도 몇 초 동안 알림 보여주기
- 알림 대시보드에서 해당 채팅방에 즉시 참여 같은 기능을 추가?(선택사항)


당신의 목표에서는 **"3번 실시간 모달"**은 확실히 Redis, **"2번 대시보드"**는 Redis + RabbitMQ 조합이 가장 적합해 보여요.
**"1번 이벤트 수신"**은 팔로우 대상이 사람인지 상품인지에 따라 달라질 것 같고, **"4번 채팅방 참여"**는 Redis가 적합합니다.
전체적으로는 Redis + RabbitMQ 병행이 가장 완성도 높은 시스템을 만들 수 있을 것 같아요!